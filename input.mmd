Title testing!
And there might be a subtitle.
 That is pretty long.
---

Paragraph testing.
Still the same paragraph but on a new line.
A continued line on 3 source-lines,
  this is the second source-line and
  this is the third source-line.
  This is a new sentence on the same "line".

This is a new paragraph.
-> This thing with arrows renders correctly!
-> On 2 separate lines.

### A chapter-like
    The chapter introduction.

    # Example header
      That has some content

    This is in the chapter-like.

This is in the root!

# Styles
  Some **bold text** and a bold *word*!
  Some __italic text__ and an italic _word_!
  Some ~~strikethrough text~~ and a strikethrough ~word~!
  Some ``monospaced text``    and a monospaced `word`!

# Quotes and specifications
  A big paragraph that has a [special] meaning.
  > Special here means that it is really [extraordinary].
    > Meaning something insane, even nested!
      Nested comment.
    First level continued comment,
     that spans two lines.
  Continuing the sentence with a _special_ meaning.

  > This instead is just an aside comment.
    Might be anything really.

  > A quote or smth with a title!
    ---

    Pretty cool.

# Lists
  Now a series of lists, notice how they are part of the surrounding paragraph:
  A.
  B. This item has a very long source-description,
     It even goes on multiple source-lines!
  C.
  I can continue the paragraph here (as there is no indent).

  Dashed list:
   - P1
   - P2
   - P3
   - P4

  Numbered list:
  1.
  2.
     2.1.
     2.2.
  3.

  Roman list:
  I.   Arbitrary spaces after list marker.
  II.
       II.1. Nested mixed list!
             That can of course span multiple lines.

             AND multiple paragraphs!
  III.

# Monospace blocks
  Adding the ability to add monospaced blocks:
  ```
  lorem ipsum,
   continued lorem ipsum

  A. lorem ipsum
  B. lorem ipsum
  ```
  And you can continue afterwards.

  Trying blocks some more
  ```
  A code block.
  ```
  > Followed by an aside...
    That has a code block in it:
    ```
        Nested code block.


    ```
    Followed by another line.

  Seems to be working.
